generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bacc_betting {
  session_id    Int
  group_se      Int
  user_id       BigInt
  bet_type_cd   Int
  bet_amount_va BigInt
  result_cd     Int
  reg_dt        DateTime @default(now())

  @@id([session_id, group_se, user_id, bet_type_cd])
}

model bacc_betting_user {
  group_se Int
  user_id  BigInt
  bet_va   Int      @default(1000)
  reg_dt   DateTime @default(now())

  @@id([group_se, user_id])
}

model bacc_daily_chip {
  daily_chip_se Int      @id @default(autoincrement())
  group_se      Int
  user_id       BigInt
  point_va      BigInt
  reg_dt        DateTime @default(now())
}

model bacc_game_session {
  session_id Int      @id @default(autoincrement())
  group_se   Int
  status_cd  Int
  result_cd  Int
  reg_dt     DateTime @default(now())
}

model bacc_trump_cards {
  card_se  Int    @id @default(autoincrement())
  suit_va  String
  rank_va  String
  point_va Int
  image_lk String
}

model coupon_info {
  coupon_se    Int      @id @default(autoincrement())
  group_se     Int
  coupon_tt    String
  price_va     Int
  day_va       Int
  type_cd      Int
  condition_cd Int
  reg_dt       DateTime @default(now())
}

model coupon_issue {
  coupon_issue_se Int      @id @default(autoincrement())
  group_se        Int
  user_id         BigInt
  coupon_se       Int
  code_ct         String
  condition_cd    Int
  start_dt        DateTime @default(now())
  end_dt          DateTime

  @@index([group_se, code_ct])
}

model coupon_log {
  coupon_log_se   Int      @id @default(autoincrement())
  coupon_issue_se Int
  user_id         BigInt
  reg_dt          DateTime @default(now())
}

model group_admin {
  admin_se     Int      @id @default(autoincrement())
  group_se     Int
  user_id      BigInt
  authority_cd Int
  reg_dt       DateTime @default(now())
}

model group_advance {
  group_advance_se Int      @id @default(autoincrement())
  group_se         Int
  group_advance_nm String
  group_advance_id BigInt
  price_va         Int
  price_type_cd    Int
  condition_cd     Int
  reg_dt           DateTime @default(now())

  @@index([group_se])
}

model group_advance_log {
  group_advance_log_se Int      @id @default(autoincrement())
  group_se             Int
  user_id              BigInt
  group_advance_se     Int
  invite_lk            String
  reg_dt               DateTime @default(now())
}

model group_casino {
  group_se    Int      @id
  group_id    BigInt
  group_nm    String
  token_if    String
  group_lk    String
  username_lk String
  reg_dt      DateTime @default(now())
}

model group_channel {
  channel_se Int    @id @default(autoincrement())
  channel_id BigInt
  channel_nm String
  invite_lk  String
  group_se   Int
}

model group_daily_check {
  daily_check_se Int      @id @default(autoincrement())
  group_se       Int
  user_id        BigInt
  point_va       BigInt
  reg_dt         DateTime @default(now())
}

model group_game {
  group_se      Int
  type_cd       Int
  group_game_nm String
  group_id      BigInt
  group_lk      String
  username_lk   String
  token_if      String
  reg_dt        DateTime @default(now())

  @@id([group_se, type_cd])
}

model group_hunt {
  group_se    Int      @id
  group_id    BigInt
  group_nm    String
  token_if    String
  group_lk    String
  username_lk String
  reg_dt      DateTime @default(now())
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model group_main {
  group_se      Int      @id
  group_id      BigInt
  group_nm      String
  token_if      String
  group_lk      String
  username_lk   String
  currency_nm   String
  secret_pw     String
  bonus_cd      Int
  popularity_cd Int
  media_cd      Int
  channel_cd    Int
  news_cron_va  String?
  condition_cd  Int      @default(1) @db.TinyInt
  lucky_va      Int      @default(15)
  manager_id    String   @db.VarChar(128)
  reg_dt        DateTime @default(now())
}

model group_member {
  group_se      Int
  user_id       BigInt
  nick_nm       String   @db.VarChar(1024)
  chat_va       Int      @default(0)
  point_va      BigInt   @default(0)
  media_va      Int      @default(0)
  popularity_va Int      @default(0)
  gamble_va     Int      @default(100)
  tpt_va        Int      @default(0)
  reg_dt        DateTime @default(now())

  @@id([group_se, user_id])
}

model group_popularity_log {
  popularity_log_se Int      @id @default(autoincrement())
  group_se          Int
  user_id           BigInt
  target_user_id    BigInt
  change_cd         Int
  reg_dt            DateTime @default(now())

  @@index([group_se, user_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model group_tit_for_tat_game {
  game_id         BigInt                                  @id @default(autoincrement())
  group_se        Int
  status          String                                  @default("waiting") @db.VarChar(10)
  user_id         BigInt
  opponent_id     BigInt
  user_choice     group_tit_for_tat_game_user_choice?
  opponent_choice group_tit_for_tat_game_opponent_choice?
  reg_dt          DateTime                                @default(now())

  @@index([group_se, status], map: "index3")
}

model hunt_monster {
  group_se   Int
  monster_se Int
  monster_nm String
  hp_va      Int
  point_va   Int
  boss_yn    Int
  emoji_if   String
  image_lk   String

  @@id([group_se, monster_se])
}

model hunt_monster_game {
  monster_game_se Int       @id @default(autoincrement())
  group_se        Int
  monster_se      Int
  condition_cd    Int       @default(1)
  start_dt        DateTime  @default(now())
  end_dt          DateTime?
}

model hunt_monster_history {
  monster_history_se Int      @id @default(autoincrement())
  group_se           Int
  monster_game_se    Int
  monster_se         Int
  user_id            BigInt
  damage_va          Int
  reg_dt             DateTime @default(now())
}

model hunt_weapon {
  group_se  Int
  weapon_se Int
  weapon_nm String
  attack_va Int
  price_va  Int

  @@id([group_se, weapon_se])
}

model hunt_weapon_enchant {
  enchant_se Int @id @default(autoincrement())
  group_se   Int
  item_se    Int
  level_sc   Int
  success_rt Int
  cost_va    Int

  @@index([group_se, item_se], map: "INDEX")
}

model hunt_weapon_user {
  group_se   Int
  user_id    BigInt
  weapon_se  Int
  enchant_va Int      @default(0)
  reg_dt     DateTime @default(now())

  @@id([group_se, user_id])
}

model quiz_four_letter {
  quiz_se  Int    @id @default(autoincrement())
  start_nm String
  end_nm   String
  type_cd  Int    @default(0)
}

model stock_info {
  stock_se    Int    @id @default(autoincrement())
  stock_nm    String
  price_va    BigInt
  interest_va Float
  group_se    Int
}

model stock_status {
  user_id  BigInt   @id
  group_se Int
  stock_se Int
  stock_cn Int
  reg_dt   DateTime @default(now())
}

model news_main {
  news_se      Int      @id @default(autoincrement())
  title_ct     String   @db.VarChar(500)
  url_lk       String   @unique(length: 255) @db.VarChar(1000)
  image_lk     String?  @db.VarChar(1000)
  summary_ct   String?  @db.Text
  category_nm  String?  @db.VarChar(100)
  published_dt DateTime
  crawled_dt   DateTime @default(now())
  updated_dt   DateTime @default(now()) @updatedAt

  @@index([published_dt])
  @@index([category_nm])
  @@index([crawled_dt])
}

model news_detail {
  news_detail_se Int      @id @default(autoincrement())
  news_se        Int      @unique
  content_ct     String   @db.LongText
  author_nm      String?  @db.VarChar(100)
  source_nm      String?  @db.VarChar(100)
  tags_ct        String?  @db.Text
  view_va        Int?     @default(0)
  like_va        Int?     @default(0)
  comment_va     Int?     @default(0)
  reg_dt         DateTime @default(now())
  updated_dt     DateTime @default(now()) @updatedAt

  @@index([author_nm])
  @@index([source_nm])
}

model news_category {
  category_se   Int      @id @default(autoincrement())
  category_nm   String   @unique @db.VarChar(100)
  category_desc String?  @db.Text
  condition_cd  Int      @default(1) @db.TinyInt
  reg_dt        DateTime @default(now())
}

model news_tag {
  tag_se       Int      @id @default(autoincrement())
  tag_nm       String   @unique @db.VarChar(100)
  condition_cd Int      @default(1) @db.TinyInt
  reg_dt       DateTime @default(now())
}

model news_tag_mapping {
  news_se Int
  tag_se  Int
  reg_dt  DateTime @default(now())

  @@id([news_se, tag_se])
}

model news_crawl_log {
  crawl_log_se Int       @id @default(autoincrement())
  status_cd    String    @db.VarChar(50)
  message_ct   String?   @db.Text
  item_va      Int?      @default(0)
  start_dt     DateTime  @default(now())
  end_dt       DateTime?
  duration_va  Int?

  @@index([start_dt], map: "crawl_log_start_dt_idx")
  @@index([status_cd], map: "crawl_log_status_cd_idx")
}

enum group_tit_for_tat_game_user_choice {
  cooperate
  betray
}

enum group_tit_for_tat_game_opponent_choice {
  cooperate
  betray
}
